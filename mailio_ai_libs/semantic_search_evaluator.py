# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05_semantic_search_evaluation.ipynb.

# %% auto 0
__all__ = ['InformationRetrievalEvaluator']

# %% ../nbs/05_semantic_search_evaluation.ipynb 1
import numpy as np
import pandas as pd
from typing import Dict, Set, List
from transformers import AutoTokenizer, AutoModel
from sentence_transformers.similarity_functions import SimilarityFunction
from torch import Tensor


# %% ../nbs/05_semantic_search_evaluation.ipynb 6
class InformationRetrievalEvaluator:
    """
    Insipired by on https://github.com/UKPLab/sentence-transformers/blob/v3.4-release/sentence_transformers/evaluation/InformationRetrievalEvaluator.py
    But simplifed to work on custom pooling and other possible mods to the embedding creation
    Also because I don't want to recompute query and corpus embeddings for test I do 

    Given a set of queries and a large corpus set. It will retrieve for each query the top-k most similar document. It measures
    Mean Reciprocal Rank (MRR), Recall@k, and Normalized Discounted Cumulative Gain (NDCG)
    """
    def __init__(self, 
        queries:Dict[str, str], # qid => query
        corpus:Dict[str,str], # cid => doc
        relevant_docs:Dict[str, Set[str]],  # qid => Set[cid]
        corpus_embeddings: Tensor,
        query_embeddings: Tensor,
        mrr_at_k: List[int] = [10],
        ndcg_at_k: List[int] = [10],
        accuracy_at_k: List[int] = [1, 3, 5, 10],
        precision_recall_at_k: List[int] = [1, 3, 5, 10],
        map_at_k: List[int] = [100],
        similarity_fct = SimilarityFunction.COSINE,
        ) -> None:
        """
        Initializes the InformationRetrievalEvaluator.
        Args:
            queries (Dict[str, str]): A dictionary mapping query IDs to queries.
            corpus (Dict[str, str]): A dictionary mapping document IDs to documents.
            relevant_docs (Dict[str, Set[str]]): A dictionary mapping query IDs to a set of relevant document IDs.
            mrr_at_k (List[int]): A list of integers representing the values of k for MRR calculation. Defaults to [10].
            ndcg_at_k (List[int]): A list of integers representing the values of k for NDCG calculation. Defaults to [10].
            accuracy_at_k (List[int]): A list of integers representing the values of k for accuracy calculation. Defaults to [1, 3, 5, 10].
            precision_recall_at_k (List[int]): A list of integers representing the values of k for precision and recall calculation. Defaults to [1, 3, 5, 10].
            map_at_k (List[int]): A list of integers representing the values of k for MAP calculation. Defaults to [100].
        """
        self.queries = queries
        self.corpus = corpus
        self.relevant_docs = relevant_docs
    

